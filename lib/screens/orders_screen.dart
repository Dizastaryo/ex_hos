import 'package:flutter/material.dart';
import 'package:dio/dio.dart';
import 'package:provider/provider.dart';

class OrdersScreen extends StatefulWidget {
  const OrdersScreen({super.key});

  @override
  State<OrdersScreen> createState() => _OrdersScreenState();
}

class _OrdersScreenState extends State<OrdersScreen> {
  String _output = '–ù–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É, —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å –¥–∞–Ω–Ω—ã–µ –∑–∞–ø—Ä–æ—Å–∞';

  Future<void> _checkHeadersAndCookies() async {
    // –ü–æ–ª—É—á–∞–µ–º Dio –∏–∑ –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞
    final dio = Provider.of<Dio>(context, listen: false);

    // –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –∏–∑ —Ö—Ä–∞–Ω–∏–ª–∏—â–∞ –∏–ª–∏ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
    final token = await _getAccessToken();

    // –ù–∞—Å—Ç—Ä–æ–∏–º Dio –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ç–æ–∫–µ–Ω–∞
    dio.options.headers['Authorization'] = 'Bearer $token';

    try {
      final response = await dio.get(
        'http://172.20.10.2:8000/products/', // –∑–∞–º–µ–Ω–∏ –Ω–∞ –∞–∫—Ç—É–∞–ª—å–Ω—ã–π —ç–Ω–¥–ø–æ–∏–Ω—Ç –¥–ª—è –∑–∞–∫–∞–∑–æ–≤
      );

      final buffer = StringBuffer();

      buffer.writeln('üîπ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–µ –∑–∞–≥–æ–ª–æ–≤–∫–∏:');
      dio.options.headers.forEach((key, value) {
        buffer.writeln('$key: $value');
      });

      buffer.writeln('\nüî∏ –ó–∞–≥–æ–ª–æ–≤–∫–∏ –æ—Ç–≤–µ—Ç–∞:');
      response.headers.forEach((key, values) {
        buffer.writeln('$key: ${values.join('; ')}');
      });

      buffer.writeln('\nüç™ Set-Cookie –∏–∑ –æ—Ç–≤–µ—Ç–∞:');
      final cookies = response.headers.map['set-cookie'];
      if (cookies != null) {
        for (var cookie in cookies) {
          buffer.writeln(cookie);
        }
      } else {
        buffer.writeln('–ù–µ—Ç cookies –≤ –æ—Ç–≤–µ—Ç–µ.');
      }

      setState(() {
        _output = buffer.toString();
      });
    } catch (e) {
      setState(() {
        _output = '‚ùå –û—à–∏–±–∫–∞: $e';
      });
    }
  }

  // –≠—Ç–æ—Ç –º–µ—Ç–æ–¥ –¥–æ–ª–∂–µ–Ω –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å access —Ç–æ–∫–µ–Ω (–Ω–∞–ø—Ä–∏–º–µ—Ä, –∏–∑ SharedPreferences –∏–ª–∏ –¥—Ä—É–≥–æ–≥–æ —Ö—Ä–∞–Ω–∏–ª–∏—â–∞)
  Future<String> _getAccessToken() async {
    // –ó–¥–µ—Å—å —Ç—ã –º–æ–∂–µ—à—å –ø–æ–ª—É—á–∏—Ç—å —Ç–æ–∫–µ–Ω –∏–∑ —Ö—Ä–∞–Ω–∏–ª–∏—â–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, SharedPreferences, –ª–æ–∫–∞–ª—å–Ω–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ –∏ —Ç.–ø.)
    // –î–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ –≤–æ–∑–≤—Ä–∞—â–∞—é –ø—Ä–∏–º–µ—Ä —Ç–æ–∫–µ–Ω–∞.
    return 'your_jwt_access_token';
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: const Text('–ó–∞–∫–∞–∑—ã'),
      ),
      body: Padding(
        padding: const EdgeInsets.all(16.0),
        child: Column(
          children: [
            ElevatedButton(
              onPressed: _checkHeadersAndCookies,
              child: const Text('–ü–æ–∫–∞–∑–∞—Ç—å –¥–∞–Ω–Ω—ã–µ –∑–∞–ø—Ä–æ—Å–∞'),
            ),
            const SizedBox(height: 20),
            Expanded(
              child: SingleChildScrollView(
                child: Text(
                  _output,
                  style: const TextStyle(fontSize: 14),
                ),
              ),
            ),
          ],
        ),
      ),
    );
  }
}
